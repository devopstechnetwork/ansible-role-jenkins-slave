---
- name: Download agent.jar from jenkins master
  win_get_url:
    url: "{{ jenkins_master_url }}/jnlpJars/agent.jar"
    dest: "{{ jenkins_slave_home }}/agent.jar"
    force: true

- name: Get jnlp content of the jenkins slave
  win_uri:
    url: "{{ jenkins_master_url }}/computer/{{ jenkins_slave_node_name }}/slave-agent.jnlp"
    method: GET
    force_basic_auth: true
    user: "{{ jenkins_master_username }}"
    password: "{{ jenkins_master_password }}"
    return_content: true
  register: jenkins_slave_jnlp_file

- name: Extract node secret from the jnlp content
  set_fact:
    jenkins_slave_node_secret: "{{ jenkins_slave_jnlp_file.content | regex_search('([a-z0-9]*)(?=</argument>)') }}"

- debug: msg="{{ jenkins_slave_node_secret }}"
# - name: Get java home path from env
#   win_shell: '[System.Environment]::GetEnvironmentVariable("JAVA_HOME","Machine")'
#   register: java_home_env
#   changed_when: false

# - name: Copy jenkins agent service file
#   win_template:
#     src: service.cmd.j2
#     dest: "{{ slave_windows_remotefs }}/service.cmd"
#   vars:
#     java_home: "{{ java_home_env.stdout | trim }}"
#   notify: Retart the jenkins agent service

# - name: Install nssm
#   win_chocolatey:
#     name: nssm
#     state: present

# - name: Create the jenkins agent service via nssm
#   win_nssm:
#     name: "{{ slave_windows_service_name }}"
#     application: "{{ slave_windows_remotefs }}/service.cmd"
#     state: present

# # This is required to be set for non-service accounts that need to run as a service
# - name: Grant jenkins account the SeServiceLogonRight user right
#   win_user_right:
#     name: SeServiceLogonRight
#     users:
#       - "{{ slave_windows_jenkins_username }}"
#     action: add

# - name: Start the jenkins agent service
#   win_service:
#     name: "{{ slave_windows_service_name }}"
#     state: started
#     username: "{{ slave_windows_jenkins_username }}"
#     password: "{{ slave_windows_jenkins_password }}"
